tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_docker_types: https://baltig.infn.it/infn-cloud/tosca-types/raw/v2.5.2/tosca_types/infrastructure/docker_types.yaml
metadata:
  template_author: INFN-CLOUD
  template_name: elastic_types
  template_version: 2.5.2


artifact_types:

  tosca.artifacts.Implementation.YAML:
    derived_from: tosca.artifacts.Implementation
    description: YAML Ansible recipe artifact
    mime_type: text/yaml
    file_ext: [ yaml, yml ]

  tosca.artifacts.AnsibleGalaxy.role:
    derived_from: tosca.artifacts.Root
    description: Ansible Galaxy role to be deployed in the target node

node_types:

  tosca.nodes.indigo.DockerCompose.Elastic:
    derived_from: tosca.nodes.indigo.DockerCompose
    properties:
      docker_compose_file_url:
        type: string
        default: https://baltig.infn.it/infn-cloud/tosca-types/raw/v2.5.2/artifacts/docker/elastic/docker-compose.yml
      #environment_variables:
      #  - ELASTIC_PASSWORD
      #  - KIBANA_PASSWORD
      #  - ELASTIC_VERSION
      #  - CERT_MAIL
    artifacts:
      docker_role:
        file: indigo-dc.docker,v2.1.3
        type: tosca.artifacts.AnsibleGalaxy.role
    interfaces:
      Standard:
        configure:
          implementation: https://baltig.infn.it/infn-cloud/tosca-types/raw/v2.5.2/artifacts/docker/elastic/configure.yml
          inputs:
            project_name:  { get_property: [ SELF, project_name ] }
            environment_variables: { get_property: [ SELF, environment_variables ] }
        start:
          implementation: https://baltig.infn.it/infn-cloud/tosca-types/raw/v2.5.2/artifacts/docker/docker-compose_start.yml
          inputs:
            docker_compose_version: { get_property: [ SELF, docker_compose_version ] }
            docker_compose_file_url:  { get_property: [ SELF, docker_compose_file_url ] }
            project_name:  { get_property: [ SELF, project_name ] }

